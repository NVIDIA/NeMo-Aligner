# log and data files
*.model
*.pkl
*.pt
.DS_Store
.hydra
.bash_history.local

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
**.pyc

# C extensions
*.so

# Distribution / packaging
.idea
.Python
wandb
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
#parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/build

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# Override Jupyter in Github Language states for more accurate estimate of repo code.
# Reference: https://github.com/github/linguist/blob/master/docs/overrides.md#generated-code
*.ipynb linguist-generated

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that donâ€™t work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
venv/
env.bak/
venv.bak/

# VSCode project settins
.vscode/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site
/docs/html
/docs/docs_zh/zh

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Emacs backup files
*~

*.tar.gz

# Test data.
tests/.data
tests/data

# outputs folder
wandb

# Checkpoints, config files and temporary files created in tutorials.
.hydra/
*.jsonl
slurm*.out
checkpoints/
datasets/
slurm*.out
dump/
draft_p_saved_ckpts/
draftp_xl_saved_ckpts/
