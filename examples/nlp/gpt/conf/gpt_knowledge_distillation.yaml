name: megatron_gpt_knowledge_distillation

trainer:
  num_nodes: 1
  devices: 1
  accelerator: gpu
  precision: bf16

  knowledge_distillation:
    max_epochs: 1
    max_steps: -1

    val_check_interval: 100
    save_interval: ${.val_check_interval}
    limit_train_batches: 1.0

    limit_val_batches: 1.0
    gradient_clip_val: 1.0

    # can be used to register any custom metrics that require token-by-token generation
    # inference_metrics:
    #   my_metric_name1:
    #     _target_: <metric class>
    #   my_metric_name2:
    #     _target_: <metric class>
    #     <any required arguments>

  # do not change these
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  use_distributed_sampler: False
  max_time: null
  max_epochs: ${.knowledge_distillation.max_epochs}
  max_steps: ${.knowledge_distillation.max_steps}

exp_manager:
  explicit_log_dir: null
  exp_dir: null
  name: ${name}
  create_wandb_logger: False
  wandb_logger_kwargs:
    project: null
    name: null
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: val_loss
    save_top_k: 5
    mode: min
    save_nemo_on_train_end: False 
    filename: 'megatron_gpt_sft--{${.monitor}:.3f}-{step}-{consumed_samples}-{epoch}'
    model_parallel_size: ${model.tensor_model_parallel_size}
    save_best_model: False   # need to keep this false otherwise it will create multiple last.ckpt files because restore reset the previous best model

pretrained_checkpoint:
  restore_from_path: null

model:
  mcore_gpt: True
  micro_batch_size: 1
  global_batch_size: 64
  megatron_amp_O2: True

  peft:
    peft_scheme: "none"  # ["lora", "none"]
    restore_from_path: null

    lora_tuning:
      target_modules: ['attention_qkv'] # this can either be 'attention_qkv','attention_dense','mlp_fc1','mlp_fc2', 'attention' (qkv & dense), 'mlp' (fc1 & fc2), 'all'
      adapter_dim: 32
      adapter_dropout: 0.0
      column_init_method: 'xavier' # IGNORED if linear_adapter is used, options: xavier, zero or normal
      row_init_method: 'zero' # IGNORED if linear_adapter is used, options: xavier, zero or normal
      layer_selection:  null  # selects in which layers to add lora adapters. e.g. [1,12] will add lora to layer 1 (lowest) and 12. null will apply adapters to all layers
      weight_tying: False
      position_embedding_strategy: null # used only when weight_tying is True

  optim:
    name: distributed_fused_adam # Supports distributed optimizer for memory savings. To enable, set to 'distributed_fused_adam'. Needs Apex to be built with specific args to work.
    lr: 3e-5
    weight_decay: 0.01
    betas:
    - 0.9
    - 0.98
    sched:
      name: CosineAnnealing
      warmup_steps: 10
      constant_steps: 1000
      min_lr: 9e-7

  knowledge_distillation:
    target_logits_scale: 1.0
    logits_scale: 1.0
    kd_loss_weight: 1.0 # weight for KD loss term in overall loss
    sft_loss_weight: 0.0 # weight for SFT loss term in overall loss
    kd_loss: fwd_kl ## the knowledge distillation loss function to use. Should be one of "fwd_kl" or "bwd_kl"
    cross_tokenizer: False ## whether the teacher and student use different tokenizers
    
  data:
    data_impl: chunked_jsonl ## use chunked_jsonl rather than jsonl to save memory
    n_chunks: null ## either a single integer or a dict with integer values, if n_chunks differs per split
    n_examples_per_chunk: null ## either a single integer or a dict with integer values, if n_examples_per_chunk differs per split
    splits_string: null
    seq_length: ${model.encoder_seq_length}
    skip_warmup: True
    num_workers: 0
    dataloader_type: single # cyclic
    reset_position_ids: False # Reset position ids after end-of-document token
    reset_attention_mask: False # Reset attention mask after end-of-document token
    eod_mask_loss: False # Mask loss for the end of document tokens
    index_mapping_dir: null # path to save index mapping .npy files, by default will save in the same location as data_prefix
    data_prefix: null
    top_k: null ## number of teacher logits in the dataset. IMPORTANT: teacher logits should be sorted in descending order

  # define fields from the base model's config that should be ignored when merging with this config.
  overwrite_base_config:
    data:
      data_prefix: True