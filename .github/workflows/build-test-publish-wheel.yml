# Copyright (c) 2020-2021, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build, test, and publish a PyPi wheel (to testpypi)

on: 
  pull_request: # for testing only, remove later
  push:
    branches:
      - main
      - 'r**'

defaults:
  run:
    shell: bash -x -e -u -o pipefail {0}

jobs:
  build-test-publish-wheel:
    uses: NVIDIA/NeMo-FW-CI-templates/.github/workflows/_build_test_publish_wheel.yml@v0.4.0
    with:
      image-name: nemo_container
      dockerfile: Dockerfile
      image-label: nemo-aligner
      build-args: |
        IMAGE_LABEL=nemo-aligner
      prune-filter-timerange: 24h
      dry-run: true
      python-package: nemo_aligner
      container-workdir: /opt/NeMo-Aligner
      environment: public
    secrets:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  notify:
    runs-on: ubuntu-latest
    if: failure()
    needs: [build-test-publish-wheel]
    env:
      RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      SLACK_WEBHOOK_ADMIN: "<!subteam^${{ secrets.SLACK_WEBHOOK_ADMIN }}>"
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST }}
      COMMIT_URL: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
      COMMIT_SHA: ${{ github.sha }}
    steps:
      - name: Send Slack alert
        env: 
          MESSAGE: >
            <${{ env.RUN_URL }}|Build, test, and push PyPi wheel (test)> has failed for <${{ env.COMMIT_URL }}|${{ env.COMMIT_SHA }}>.

            cc: ${{ env.SLACK_WEBHOOK_ADMIN }}
        run: |
          MESSAGE=$(jq -cn --arg message "beep boop ðŸ¤–: $MESSAGE" '{
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": $message
                }
              }
            ]
          }')

          curl -X POST -H "Content-type: application/json" --data "$MESSAGE" $SLACK_WEBHOOK